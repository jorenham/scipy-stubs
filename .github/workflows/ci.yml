name: CI

on:
  push:
    branches: [master]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  UV_LOCKED: true

jobs:
  lint:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: markdownlint
        uses: DavidAnson/markdownlint-cli2-action@v18
        with:
          config: ".markdownlint.yaml"
          globs: "**/*.md"

      - name: typos
        uses: crate-ci/typos@master

      - name: setup uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          python-version: "3.13"

      - name: setup tox
        run: uv tool install tox --with tox-uv

      - name: lint
        run: tox -e=lint

      - name: basedmypy
        run: tox -e=basedmypy

      - name: basedpyright
        run: tox -e=basedpyright

  typetest:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          python-version: "3.13"

      - name: install
        run: uv sync --no-editable

      - name: setup tox
        run: uv tool install tox --with tox-uv

      - name: print versions
        run: tox -e=min-versions-test

      - name: basedmypy test
        run: tox -e=basedmypy-tests

      - name: basedpyright test
        run: tox -e=basedpyright-tests

      - name: stubtest
        run: tox -e=stubtest

  typetest-oldest-supported-numpy:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          python-version: "3.10"

      - name: setup tox
        run: uv tool install tox --with tox-uv

      - name: set env scipy py
        run: echo "SCIPY_MIN_PY=$(uv run scripts/version_bounds.py python)" >> $GITHUB_ENV

      - name: set env scipy numpy
        run: echo "SCIPY_MIN_NP=$(uv run scripts/version_bounds.py numpy)" >> $GITHUB_ENV

      - name: install
        run: |
          rm -rf .venv
          uv add --python=$SCIPY_MIN_PY numpy==$SCIPY_MIN_NP

      - name: print versions
        run: uv run --python=$SCIPY_MIN_PY tox -e=min-versions-test

      - name: basedmypy test
        run: uv run --python=$SCIPY_MIN_PY tox -e=basedmypy-tests

      - name: basedpyright test
        run: uv run --python=$SCIPY_MIN_PY tox -e=basedpyright-tests

      - name: stubtest
        run: uv run --python=$SCIPY_MIN_PY tox -e=stubtest
