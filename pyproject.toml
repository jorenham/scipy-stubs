[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "scipy-stubs"
version = "1.14.1.5dev0"
description = "Typing stubs for SciPy"
readme = "README.md"
authors = [{name = "Joren Hammudoglu", email = "jhammudoglu@gmail.com"}]
license = "BSD-3-Clause"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Stubs Only",
    "Typing :: Typed",
]
requires-python = ">=3.10"
dependencies = ["optype>=0.7.3"]

[project.optional-dependencies]
scipy = ["scipy>=1.10"]

[project.urls]
Repository = "https://github.com/jorenham/scipy-stubs/"
Issues = "https://github.com/jorenham/scipy-stubs/issues"
Changelog = "https://github.com/jorenham/scipy-stubs/releases"
Funding = "https://github.com/sponsors/jorenham"

[tool.hatch.build.targets.sdist]
packages = ["scipy-stubs"]
exclude = [
    "/.cache",
    "/.github",
    "/.mypy_cache",
    "/.pytest_cache",
    "/.ruff_cache",
    "/.tox",
    "/.venv",
    "/.vscode",
    "/dist",
    "/tests",
    ".editorconfig",
    ".gitignore",
    ".mardownlint.yaml",
    ".pre-commit-config.yaml",
    ".python-version",
    "CODE_OF_CONDUCT.md",
    "README.md",
    "SECURITY.md",
    "uv.lock",
]

[tool.uv]
dev-dependencies = [
    "scipy==1.14.1",

    # linting
    "basedmypy[faster-cache]>=2.7.0",
    "basedpyright>=1.22.0",
    "mdformat-gfm>=0.3.7,<1.0",
    "mdformat-gfm-alerts>=1.0.1,<2.0",
    "mdformat-pyproject>=0.0.2,<1.0",
    "ruff>=0.8.1",
    "sp-repo-review[cli]>=2024.8.19",

    # task runners
    "poethepoet>=0.31.1",
    "pre-commit>=4.0.1",
    "tox>=4.23.2",

    # codemodding
    "libcst>=1.5.1",
]

[tool.poe.tasks]
clean = """
rm -rf
    codegen/*.pyc
    codegen/__pycache__
    scipy-stubs/**/*.pyc
    scipy-stubs/**/__pycache__
    ./**/.mypy_cache
    ./**/.ruff_cache
    ./**/.tox
"""
mdformat = """
mdformat
    CODE_OF_CONDUCT.md
    CONTRIBUTING.md
    README.md
    SECURITY.md
    tests/README.md
"""
_ruff_format = "ruff format"
_ruff_check = "ruff check --show-fixes"
codespell = "codespell"
repo-review = "repo-review ."
format = ["mdformat", "_ruff_format"]
ruff = ["_ruff_format", "_ruff_check"]
check = ["mdformat --check", "repo-review", "codespell", "ruff"]
lint = ["check", "format"]
pre-commit = "pre-commit run --all-files"
tox = "tox -p all"

_test_bpr = "basedpyright tests"
_test_mypy = "mypy --config-file=pyproject.toml tests"
typetest = ["_test_bpr", "_test_mypy"]

[tool.poe.tasks.pyright]
cmd = "basedpyright $path"
args = [{name = "path", positional = true, multiple = true, default = "scipy-stubs codegen"}]

[tool.poe.tasks.mypy]
cmd = "mypy --config-file=pyproject.toml $path"
args = [{name = "path", positional = true, multiple = true, default = "scipy-stubs codegen"}]

[tool.poe.tasks.stubtest]
cmd = """
stubtest
    --mypy-config-file=pyproject.toml
    --allowlist=.mypyignore
    --ignore-unused-allowlist
    $modules
"""
args = [{name = "modules", positional = true, multiple = true, default = "scipy"}]

[tool.poe.tasks.codemod]
cmd = "python -m libcst.tool codemod -x --hide-progress --include-stubs codegen.mods.$name $path"
args = [
    {name = "name", positional = true, multiple = false, required = true},
    {name = "path", positional = true, multiple = false, default = "scipy-stubs"},
]

[tool.codespell]
context = 2
skip = "*.lock,*.pyi"

[tool.mdformat]
end_of_line = "lf"
exclude = [".tox/**", ".venv/**", "**/*.m[!d]", "**/*.[!m]d"] # python >= 3.13

[tool.mypy]
python_version = "3.10"
strict = true
disable_bytearray_promotion = true
disable_memoryview_promotion = true
warn_unused_ignores = true
warn_unreachable = true
disallow_any_explicit = false                                                # no other way to type e.g. `float64 <: number[Any]`
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
# plugins = ["numpy.typing.mypy_plugin"]

[tool.pyright]
include = ["codegen", "scipy-stubs", "tests"]
ignore = [".venv"]
venv = ".venv"
venvPath = "."
stubPath = "."
pythonVersion = "3.10"
pythonPlatform = "All"
typeCheckingMode = "strict"
# ignore comments
enableTypeIgnoreComments = false
reportIgnoreCommentWithoutRule = true     # based
reportUnnecessaryTypeIgnoreComment = true
# imports
reportImplicitRelativeImport = true   # based
reportPrivateLocalImportUsage = false # based
reportShadowedImports = true
# classes and inheritance
reportUnsafeMultipleInheritance = true # based
reportImplicitAbstractClass = true     # based
reportImplicitOverride = true
reportUnannotatedClassAttribute = true # based
# linting
deprecateTypingAliases = true
enableReachabilityAnalysis = false       # discouraged
reportCallInDefaultInitializer = true
reportImplicitStringConcatenation = true # based
reportPrivateUsage = false
# narrowing
strictGenericNarrowing = true # based
# TODO: enable once nothing is `Untyped`
reportAny = false         # based
reportExplicitAny = false # based
# environment
failOnWarnings = true # based
executionEnvironments = [
    {root = "scipy-stubs", reportDeprecated = false, reportUnsafeMultipleInheritance = false, reportUnreachable = false},
    {root = "codegen", reportAny = true, reportExplicitAny = true, reportInvalidCast = true, reportPrivateUsage = true},
    {root = "tests", reportAny = true, reportInvalidCast = true, reportInvalidStubStatement = false},
]

[tool.repo-review]
ignore = [
    "PY004", # no /docs
    "PP301", # pytest is irrelevant
    "PC111", # no blacken-docs because markdown has no code
    "PC140", # manual typecheck pre-commit hooks
    "PC170", # no pygrep-hooks because no rST
    "RTD",   # no RTD
]

[tool.ruff]
builtins = ["reveal_locals", "reveal_type"]
exclude = [".venv"]
force-exclude = true
# https://typing.readthedocs.io/en/latest/guides/writing_stubs.html#maximum-line-length
line-length = 130
src = ["scipy-stubs", "codegen"]

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = ["D", "FBT", "COM812", "CPY", "EM", "TD", "FIX", "DOC"]

[tool.ruff.lint.per-file-ignores]
# TODO: enable F (pyflakes)
"*.pyi" = ["F", "E741", "N", "A", "PYI054", "PLC2701", "PLW3201", "PLR", "FURB"]

[tool.ruff.lint.flake8-import-conventions]
banned-from = ["numpy", "numpy.typing", "optype", "optype.numpy", "optype.typing"]
[tool.ruff.lint.flake8-import-conventions.extend-aliases]
"ctypes" = "ct"
"datetime" = "dt"
"numpy" = "np"
"numpy.typing" = "npt"
"optype" = "op"
"optype.numpy" = "onp"
"optype.typing" = "opt"

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["scipy"]
no-lines-before = ["typing", "first-party", "local-folder"]
section-order = ["standard-library", "typing", "third-party", "first-party", "local-folder"]
split-on-trailing-comma = true

[tool.ruff.lint.isort.sections]
typing = ["collections.abc", "types", "typing", "typing_extensions"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true

[tool.tox]
isolated_build = true
env_list = ["repo-review", "pre-commit", "3.10", "3.11", "3.12", "3.13"]

[tool.tox.env_run_base]
description = "stubtest with {base_python}"
skip_install = true
allowlist_externals = ["uv", "poe"]
commands_pre = [["uv", "sync", "--frozen"]]
commands = [["poe", "stubtest"]]

[tool.tox.env.pre-commit]
description = "pre-commit"
skip_install = true
allowlist_externals = ["uv", "poe"]
commands_pre = [["uv", "sync", "--frozen"]]
commands = [["poe", "pre-commit"]]

[tool.tox.env.repo-review]
description = "repo-review"
skip_install = true
allowlist_externals = ["uv", "poe"]
commands_pre = [["uv", "sync", "--frozen"]]
commands = [["poe", "repo-review"]]
